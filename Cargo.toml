[workspace]
resolver = "2"
members = [
    "wutengine",
    "wutengine/macro",
    "wutengine_editor",
    "wutengine_core",
    "wutengine_examples/pong",
    "wutengine_util/macro",
    "wutengine_graphics",
    "wutengine_opengl",
    "wutengine_ecs",
    "gl-from-raw-window-handle",
]

[workspace.package]
version = "0.0.8"
edition = "2021"
rust-version = "1.81"
authors = ["Wouter de Bruijn <wouter@wutru.io>"]
homepage = "https://github.com/cloone8/WutEngine"
repository = "https://github.com/cloone8/WutEngine"
license = "MPL-2.0"
keywords = []
categories = ["game-engines"]

[workspace.dependencies]
### Workspace dependencies ###
wutengine = { path = "wutengine", version = "0.0.8" }
wutengine_macro = { path = "wutengine/macro", version = "0.0.8" }
wutengine_core = { path = "wutengine_core", version = "0.0.8" }
wutengine_util_macro = { path = "wutengine_util/macro", version = "0.0.8" }
wutengine_graphics = { path = "wutengine_graphics", version = "0.0.8" }
wutengine_opengl = { path = "wutengine_opengl", version = "0.0.8" }
wutengine_ecs = { path = "wutengine_ecs", version = "0.0.8" }
gl-from-raw-window-handle = { path = "gl-from-raw-window-handle", version = "0.1.2" }

### External dependencies ###
# OS
cocoa = "0.26.0"
objc = "0.2.7"
core-foundation = "0.9.4"
x11 = { version = "2.21.0", features = ["xlib", "glx"] }
winapi = { version = "0.3.9", features = [
    "libloaderapi",
    "minwindef",
    "ntdef",
    "windef",
    "wingdi",
    "winnt",
    "winuser",
] }
uuid = { version = "1.11.0", features = ["v4"] }

# Windowing 
winit = { version = "0.30.5" }
gl_generator = "0.14.0"
raw-window-handle = "0.6.2"

# Logging and errors
log = "0.4.22"
simplelog = "0.12.2"
thiserror = "1.0.65"

# Math and algorithms
nohash-hasher = { version = "0.2.0" }
rand = { version = "0.8.5", features = ["std", "std_rng", "small_rng"] }
itertools = "0.13.0"
glam = { version = "0.29.0", features = ["std", "debug-glam-assert"] }

# Macro utilities
syn = { version = "2.0.82", features = ["full", "parsing"] }
quote = "1.0.37"
proc-macro2 = "1.0.89"
darling = "0.20.10"

# Others
static_assertions = "1.1.0"
include_dir = "0.7.4"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.22.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = []
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
    "aarch64-apple-darwin",
    "x86_64-apple-darwin",
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
]
# Which actions to run on pull requests
pr-run-mode = "plan"

[workspace.metadata.dist.dependencies.apt]
libx11-xcb-dev = '*'
libgl1-mesa-dev = '*'

[profile.dev]
opt-level = 1
panic = "unwind"

[profile.release]
strip = true
lto = true
codegen-units = 1
panic = "unwind"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"

[workspace.lints.rust]
missing_docs = "warn"
unsafe_op_in_unsafe_fn = "warn"
unreachable_pub = "warn"

[workspace.lints.clippy]
missing_docs_in_private_items = "warn"
